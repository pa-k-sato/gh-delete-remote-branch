#!/usr/bin/env bash
set -e

function show_usage() {
  echo "--help: show this usage"
  echo "-p --prefix: name prefix of target branches"
  echo "-d --dry-run: show target branches with specified prefix, but won't delete actual"
}

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    -p|--prefix)
      PREFIX="$2"
      shift # past argument
      shift # past value
      ;;
    -d|--dry-run)
      DRY_RUN=YES
      shift # past argument
      ;;
    --help)
      show_usage
      exit 0
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

if [ "$PREFIX" = "" ]; then
  echo please specify branch name prefix
  exit 1
fi

target_list=( $(git branch -r --list "origin/$PREFIX*") )

if [ "${#target_list[@]}" -eq "0" ]; then
    echo "no branch was found with \"$PREFIX\""
    exit 1
fi
if [ "${#target_list[@]}" -gt "10" ]; then
    echo "too many branches were found with \"$PREFIX\", please confirm"
    exit 1
fi

# show target branches
for t in "${target_list[@]}"
do
  echo "  delete branch: $t"
done

if [ "$DRY_RUN" = "YES" ]; then
  echo finished dry run
  exit 0
fi

read -n1 -p "delete these branches from remote ? (Y/n): " yn
echo
if [[ ! $yn = [Y] ]]; then
  echo deleting branches canceled
  exit 1
fi

for t in "${target_list[@]}"
do
  branch_name=$(echo $t | cut -c 8-)
  git push origin --delete $branch_name
done

